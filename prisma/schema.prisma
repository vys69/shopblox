// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id
  username       String
  nickname       String?
  picture        String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  tokenExpiresAt DateTime?
  profile        Profile?
  isSeller       Boolean   @default(false)
  sessions       Session[] @relation("UserSessions")
  stores         Store[]   @relation("UserStores")
}

model Profile {
  id        String   @id @default(cuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation("UserSessions", references: [id], fields: [userId], onDelete: Cascade)
}


model Store {
  id          String   @id @default(cuid())
  userId      String
  groupId     String
  user        User     @relation("UserStores", fields: [userId], references: [id])
  name        String   
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}